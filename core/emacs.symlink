;-*-lisp-*-


;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(defun require-el-get (package)
  "Add a package to el-get-sources"
  (add-to-list 'el-get-sources package))

(defvar pre-init-hook '()
  "Run before el-get packages are installed")

(defvar post-init-hook '()
  "Run after el-get packages are installed")

(defun pre-init (func)
  (add-hook 'pre-init-hook func t))

(defun post-init (func)
  (add-hook 'post-init-hook func t))

(defun read-lines (path)
  (with-temp-buffer
    (insert-file-contents path)
    (split-string (buffer-string) "\n" t)))

(defun re-initialize-modules ()
  (interactive)
  (setq el-get-sources '(el-get))
  (setq el-get-packages '())
  (setq el-get-dir "~/.el-get/")

  (setq module-list (read-lines "~/.modules"))

  (dolist (module module-list)
    (let ((module-init-file (format "~/dotfiles/%s/init.el" module)))
      (if (file-exists-p module-init-file)
          (load module-init-file))))

  ; Set up the dotfiles path
  (setq user-emacs-directory "~/dotfiles/core/")
  (add-to-list 'load-path "~/dotfiles/core/lisp")

  ; Customization messes with init.el by default
  (setq custom-file (concat user-emacs-directory "customization.el"))
  (load custom-file 'noerror)

  (run-hooks 'pre-init-hook)

  ; el-get goes into .el-get so packages won't pollute this directory

  (load (concat user-emacs-directory "lisp/getelget.el"))

  (run-hooks 'post-init-hook))

(re-initialize-modules)
